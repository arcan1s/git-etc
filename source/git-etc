#!/bin/bash
func_help() {
  echo -e "Simple daemon written on BASH for monitoring changes in files"
  echo -e "\nUsage: git-etc [ --for-all ] [ -i ignore-list ] [ -h | --help ] [ -v | --version ] -d /path/to/directory -t time-to-sleep" 
  echo -e "\nRequired parameters:"
  echo -e "  -d  --directory   - path to GIT repository"
  echo -e "  -t  --timesleep   - time to sleep"
  echo -e "\nAdditional parametrs:"
  echo -e "      --for-all     - do not change rights to .git"
  echo -e "  -i  --ignorelist  - files in ignore list"
  echo -e "  -h  --help        - show this help and exit"
  echo -e "  -v  --version     - show version and exit"
  echo -e "\nSee \"man 1 git-etc\" for more details"
  exit 1
}
func_ver() {
  echo -e "                   git-etc                   "
  echo -e "Simple daemon for monitoring changes in files"
  echo -e "Version : 2.1.1                 License : GPL"
  echo -e "Author :          Evgeniy Alexeev aka arcanis"
  echo -e "E-mail :             esalexeev (at) gmail.com"
  exit 1
}
isnum () {
    (t=$(( 0$1+0 ))) 2>/dev/null
}

FORALL="1"
until [ -z $1 ]; do
  if [ "$1" = "-h" ]; then
    func_help; fi
  if [ "$1" = "--help" ]; then
    func_help; fi
  if [ "$1" = "-v" ]; then
    func_ver; fi
  if [ "$1" = "--version" ]; then
    func_ver; fi
  if [ "$1" = "-d" ]; then
    DIRECTORY="$2"
    shift; fi
  if [ "$1" = "--directory" ]; then
    DIRECTORY="$2"
    shift; fi
  if [ "$1" = "-t" ]; then
    TIMESLEEP="$2"
    shift; fi
  if [ "$1" = "--timesleep" ]; then
    TIMESLEEP="$2"
    shift; fi
  if [ "$1" = "-i" ]; then
    IGNORELIST=`echo $2 | sed -e 's/;;/ /g'`
    shift; fi
  if [ "$1" = "--ignorelist" ]; then
    IGNORELIST=`echo $2 | sed -e 's/;;/ /g'`
    shift; fi
  if [ "$1" = "--for-all" ]; then
    FORALL="0"; fi
  shift
done

if [[ -z "$DIRECTORY" || -z "$TIMESLEEP" ]]; then
  echo "[EE]: Parametrs aren't set"
  echo "Usage: git-etc [ --for-all ] [ -i ignore-list ] [ -h | --help ] [ -v | --version ] -d /path/to/directory -t time-to-sleep" 
  exit 1
fi

if [ ! -d "$DIRECTORY" ]; then
  echo "[EE]: Directory '$DIRECTORY' doesn't exist"
  exit 1
fi

if isnum $TIMESLEEP; then
  if [ $TIMESLEEP -ge 1 ]; then
    echo "[II]: Set DIRECTORY to '$DIRECTORY'"
    TIMESLEEP=$(( $TIMESLEEP*3600 ))
    echo "[II]: Set TIMESLEEP to '$TIMESLEEP' sec"
  else
    echo "[EE]: '$TIMESLEEP' isn't valid number"
    exit 1
  fi
else
  echo "[EE]: '$TIMESLEEP' isn't a number"
  exit 1
fi


# Change cwd
cd /

# Output to /dev/null
< /dev/null > /dev/null 2>&1 &


# Creating git repository
GITDIR=$DIRECTORY/.git
if [ ! -d "$GITDIR" ]; then
  echo "[II]: Creating git repository"
  cd $DIRECTORY
  git init
  if [[ $FORALL == "1" ]]; then
    echo "[II]: Changing rights to '$GITDIR'"
    chmod -R o-rwx $GITDIR
  fi
  echo "[II]: Creating initial commit"
  git add -A .
  git commit -m `date +%Y%m%d%H%M%S-%N`
  cd /
fi

# Adding files in ignore-list
echo "[II]: Cheching ignore-list"
if [ -z "$IGNORELIST" ]; then
  echo "[WW]: IGNORELIST isn't set"
else
  for IGNORE in $( echo $IGNORELIST ); do
    label=0
    for ITEMS in $( cat $GITDIR/info/exclude ); do
      if [[ "$IGNORE" == $ITEMS ]]; then
        label=1
      fi
    done
    if [[ "$label" == 0 ]]; then
      echo "[II]: Adding $IGNORE in ignore-list"
      echo $IGNORE >> $GITDIR/info/exclude
    fi
  done
fi

# Creating experimental branch
cd $DIRECTORY
EXPERIMENTAL=`git branch | grep experimental`
if [ -z "$EXPERIMENTAL" ]; then
  echo "[II]: Creating experimental branch"
  git branch experimental
else
  echo "[II]: Experimental branch already exists"
fi
cd /

   

# Forking
(
  while true; do
# Creating commit
    cd $DIRECTORY
    echo "[II]: Set username and e-mail"
    git config user.name "git-etc"
    git config user.email "git-etc@mail"
    echo "[II]: Adding files" 
    git add -A .
    echo "[II]: Creating new commit"
    git commit -m `date +%Y%m%d%H%M%S-%N`
    cd /

# Waiting $TIMESLEEP hours
    echo "[II]: Waiting '$TIMESLEEP' sec"
    sleep $TIMESLEEP
  done
) &
